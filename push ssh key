#!/bin/bash

usage(){
echo -e "
        #############################################
        #                                           #
        #  Usage:                                   #
        #    This script will push out ssh keys     #
        #    for ESXi hosts                         #
        #                                           #
        #  To run the scipt:                        #
        #    $> ./<script> <iplist> <ssh-key>       #
        #     *The ssh-key is a txt file            #
        #      with the key in it                   #
        #     *Only one ssh key per line            #
        #     *iplist- single ip on each line       #
        #                                           #
        #############################################"
}

check(){
while [[ ! -f $iplist ]]
        do
        echo -e "Please enter path for iplist: \c"
        read iplist
        done
}

if [ $# -eq 2 ]; then
        iplist=$1
        ssh_key=$2
        check

        while read hostip
        do

        key=$(cat ssh_key)
        echo -e "\n$(tput setaf 2)Pushing file out to host: $hostip $(tput sgr0)"
                #Green text that lets you know what host you're working on
        ssh -n root@$hostip "echo -e "$key" >> ~/etc/ssh/keys-root/authorized_keys" ";sed -i 's/ssh-rsa/\nssh-rsa /g' ~/etc/ssh/keys-root/authorized_keys "
                #This will read line from "iplist" and set to value to "hostip", then it will ssh into the server and copy "key" to the autorized key file
                #The sed command is only necessary if you have more than ssh key in the file. This will find every instance of ssh-rsa and insert a line break before ssh-rsa. This is necessary since when you cat the ssh_key to "key" it places everything on one line so you need to break that up.
        
        done < $iplist #Wash Rinse Repeat 
else
        usage
fi

#Tput color codes
#0 – Black.
#1 – Red.
#2 – Green.
#3 – Yellow.
#4 – Blue.
#5 – Magenta.
#6 – Cyan.
#7 – White.
